Input latent variable into generator
Fake Image Output
tensor([[[[1.0000, 1.0000, 1.0000,  ..., 0.0000, 1.0000, 1.0000],
          [1.0000, 1.0000, 1.0000,  ..., 0.0000, 0.0000, 1.0000],
          [1.0000, 1.0000, 1.0000,  ..., 0.0000, 0.0000, 0.0000],
          ...,
          [0.0000, 0.0000, 0.0000,  ..., 1.0000, 1.0000, 1.0000],
          [1.0000, 0.0000, 0.0000,  ..., 1.0000, 1.0000, 1.0000],
          [1.0000, 0.0000, 1.0000,  ..., 0.0000, 0.0000, 1.0000]]],
        [[[1.0000, 1.0000, 0.0000,  ..., 1.0000, 1.0000, 1.0000],
          [1.0000, 1.0000, 0.0000,  ..., 1.0000, 1.0000, 1.0000],
          [1.0000, 1.0000, 1.0000,  ..., 0.0000, 0.0000, 1.0000],
          ...,
          [1.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 1.0000],
          [1.0000, 0.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000],
          [1.0000, 1.0000, 1.0000,  ..., 0.0000, 0.0000, 1.0000]]],
        [[[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 1.0000],
          [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 1.0000],
          [0.0000, 1.0000, 0.0000,  ..., 0.0000, 0.0000, 1.0000],
          ...,
          [1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000],
          [1.0000, 0.0000, 1.0000,  ..., 1.0000, 0.0000, 1.0000],
          [1.0000, 0.0000, 1.0000,  ..., 1.0000, 0.0000, 1.0000]]],
        ...,
        [[[1.0000, 1.0000, 0.0000,  ..., 1.0000, 1.0000, 0.0000],
          [1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000],
          [1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000],
          ...,
          [0.0000, 0.0000, 1.0000,  ..., 0.0000, 0.0000, 0.0000],
          [0.0000, 0.0000, 0.0000,  ..., 1.0000, 1.0000, 1.0000],
          [0.0000, 0.0000, 0.0000,  ..., 1.0000, 1.0000, 1.0000]]],
        [[[1.0000, 1.0000, 0.0000,  ..., 1.0000, 0.0000, 0.0000],
          [1.0000, 0.0000, 0.0000,  ..., 1.0000, 0.0000, 1.0000],
          [1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000],
          ...,
          [1.0000, 1.0000, 1.0000,  ..., 0.0000, 0.0000, 0.0000],
          [1.0000, 1.0000, 1.0000,  ..., 0.0000, 0.0000, 1.0000],
          [1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000]]],
        [[[1.0000, 1.0000, 1.0000,  ..., 0.0000, 0.0000, 0.0000],
          [1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000],
          [1.0000, 1.0000, 1.0000,  ..., 1.0000, 0.0000, 0.0000],
          ...,
          [1.0000, 0.0000, 0.0000,  ..., 0.0000, 1.0000, 1.0000],
          [1.0000, 0.0000, 0.0000,  ..., 0.0000, 1.0000, 1.0000],
          [1.0000, 0.0000, 0.0000,  ..., 0.0000, 1.0000, 1.0000]]]],
       device='cuda:0', grad_fn=<ViewBackward>)
[Epoch 0/200] [Batch 0/1563] [D loss: 8.690291] [G loss: 0.020033]
Saved image: images/0.png
/home/pierre/miniconda3/envs/robust/lib/python3.8/site-packages/torch/nn/functional.py:1709: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
Traceback (most recent call last):
  File "wgan_gp.py", line 123, in <module>
    for i, imgs in enumerate(dataloader):
  File "/home/pierre/miniconda3/envs/robust/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 517, in __next__
    data = self._next_data()
  File "/home/pierre/miniconda3/envs/robust/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 557, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/pierre/miniconda3/envs/robust/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 44, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/pierre/miniconda3/envs/robust/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 44, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/pierre/Git/gamegan/src/gan/dataset.py", line 25, in __getitem__
    return torch.tensor(self.maze_generator.generate_maze()).unsqueeze(0)
  File "/home/pierre/Git/gamegan/src/gan/../maze_generators/aldousbroder.py", line 87, in generate_maze
    (crow, ccol) = choice(self._find_neighbors(crow, ccol, grid))
  File "/home/pierre/miniconda3/envs/robust/lib/python3.8/random.py", line 288, in choice
    i = self._randbelow(len(seq))
KeyboardInterrupt